name:                subhask
version:             0.1.1.0
synopsis:            Type safe interface for programming in subcategories of Hask
homepage:            http://github.com/mikeizbicki/subhask
license:             BSD3
license-file:        LICENSE
author:              Mike Izbicki
maintainer:          mike@izbicki.me
category:            Control, Categories, Algebra
build-type:          Simple
extra-source-files:  README.md
cabal-version:       >=1.10

description:
    SubHask is a radical rewrite of the Haskell <https://www.haskell.org/onlinereport/standard-prelude.htm Prelude>.
    The goal is to make numerical computing in Haskell fun and fast.
    The main idea is to use a type safe interface for programming in arbitrary subcategories of <https://wiki.haskell.org/Hask Hask>.
    For example, the category <http://ncatlab.org/nlab/show/Vect Vect> of linear functions is a subcategory of Hask, and SubHask exploits this fact to give a nice interface for linear algebra.
    To achieve this goal, almost every class hierarchy is redefined to be more general.

    I recommend reading the <http://github.com/mikeizbicki/subhask/blob/master/README.md README> file and the <http://github.com/mikeizbicki/subhask/blob/master/examples examples> before looking at the documentation here.

source-repository head
    type: git
    location: http://github.com/mikeizbicki/subhask

--------------------------------------------------------------------------------

library
    exposed-modules:
        SubHask

        SubHask.Algebra
        SubHask.Algebra.Array
        SubHask.Algebra.Container
        SubHask.Algebra.Group
        SubHask.Algebra.Logic
        SubHask.Algebra.Matrix
        SubHask.Algebra.Metric
        SubHask.Algebra.Ord
        SubHask.Algebra.Parallel
        SubHask.Algebra.Ring
        SubHask.Algebra.Vector
        SubHask.Algebra.Vector.FFI

        SubHask.Category
        SubHask.Category.Finite
        SubHask.Category.Product
        SubHask.Category.Polynomial
        SubHask.Category.Slice
        SubHask.Category.Trans.Bijective
        SubHask.Category.Trans.Constrained
        SubHask.Category.Trans.Derivative
        SubHask.Category.Trans.Monotonic

        SubHask.Compatibility.Base
        SubHask.Compatibility.BloomFilter
        SubHask.Compatibility.ByteString
        SubHask.Compatibility.Cassava
        SubHask.Compatibility.Containers
        SubHask.Compatibility.HyperLogLog

        SubHask.Monad
        SubHask.Mutable
        SubHask.SubType

        SubHask.TemplateHaskell.Base
        SubHask.TemplateHaskell.Deriving
        SubHask.TemplateHaskell.Mutable
        SubHask.TemplateHaskell.Test

    other-modules:
        SubHask.Internal.Prelude
        SubHask.TemplateHaskell.Common

    default-extensions:
        TypeFamilies,
        ConstraintKinds,
        DataKinds,
        GADTs,
        MultiParamTypeClasses,
        FlexibleInstances,
        FlexibleContexts,
        TypeOperators,
        RankNTypes,
        InstanceSigs,
        ScopedTypeVariables,
        UndecidableInstances,
        PolyKinds,
        StandaloneDeriving,
        GeneralizedNewtypeDeriving,
        TemplateHaskell,
        BangPatterns,
        FunctionalDependencies,
        TupleSections,
        MultiWayIf,

        AutoDeriveTypeable,
        DeriveGeneric,
        RebindableSyntax
--         OverloadedLists

    hs-source-dirs:
        src

    c-sources:
        cbits/Lebesgue.c

    cc-options:
        -ffast-math
        -msse3

    ghc-options:
        -funbox-strict-fields
        -Wall

    build-depends:
        -- haskell language
        base >= 4.8 && <4.9,
        ghc-prim,
        template-haskell,

        -- special functionality
        parallel,
        deepseq,
        primitive,
        monad-primitive,
        QuickCheck,

        -- math
        erf,
        gamma,
        hmatrix,

        -- compatibility control flow
        mtl,
        MonadRandom,

        -- compatibility data structures
        bytestring,
        bloomfilter,
        cassava,
        containers,
        vector,
        array,
        hyperloglog,
        reflection,

        -- required for hyperloglog compatibility
        semigroups,
        bytes,
        approximate,
        lens                 

    default-language:
        Haskell2010

--------------------------------------------------------------------------------

Test-Suite TestSuite-Unoptimized
    default-language:   Haskell2010
    type:               exitcode-stdio-1.0
    hs-source-dirs:     test
    main-is:            TestSuite.hs

    ghc-options:
        -O0

    build-depends:
        subhask,
        test-framework-quickcheck2,
        test-framework

-- FIXME:
-- The test below takes a long time to compile.
-- The slow builds are causing travis tests to fail.
--
-- Test-Suite TestSuite-Optimized
--     default-language:   Haskell2010
--     type:               exitcode-stdio-1.0
--     hs-source-dirs:     test
--     main-is:            TestSuite.hs
--
--     build-depends:
--         subhask,
--         test-framework-quickcheck2  >= 0.3.0,
--         test-framework              >= 0.8.0
--
--     ghc-options:
--         -O2
--         -fllvm

--------------------

Test-Suite Example0001
    default-language:   Haskell2010
    type:               exitcode-stdio-1.0
    hs-source-dirs:     examples
    main-is:            example0001-polynomials.lhs
    build-depends:      subhask, base

Test-Suite Example0002
    default-language:   Haskell2010
    type:               exitcode-stdio-1.0
    hs-source-dirs:     examples
    main-is:            example0002-monad-instances-for-set.lhs
    build-depends:      subhask, base

Test-Suite Example0003
    default-language:   Haskell2010
    type:               exitcode-stdio-1.0
    hs-source-dirs:     examples
    main-is:            example0003-linear-algebra.lhs
    build-depends:      subhask, base

--------------------------------------------------------------------------------

benchmark Vector
    default-language: Haskell2010
    type:             exitcode-stdio-1.0
    hs-source-dirs:   bench
    main-is:          Vector.hs
    build-depends:
        base,
        subhask,
        criterion,
        MonadRandom

    ghc-options:
        -O2
        -funbox-strict-fields
        -fexcess-precision
        -- awaiting https://github.com/travis-ci/travis-ci/issues/6120
        -- -fllvm
        -optlo-O3
        -optlo-enable-fp-mad
        -optlo-enable-no-infs-fp-math
        -optlo-enable-no-nans-fp-math
        -optlo-enable-unsafe-fp-math
